#!/usr/bin/env bash

PRJ_FILE="$HOME/.prj"

set -e

error() {
  echo "error: $*" >&2
}

session-exists() {
  tmux ls -F "#{session_name}" 2> /dev/null | grep -Fx "$1" > /dev/null
}

create-session() {
  local name="$1"
  local path="$2"

  if [ ! -d "$path" ]; then
    error "directory does not exist: $path"
    exit 1
  fi

  {
    cd "$path"

    tmux new-session -d -s "$name" -n vim

    tmux split-window -h -t "$name"

    tmux send-keys -t "$name:1.1" "cd '$path'; cl" C-m
    tmux send-keys -t "$name:1.2" "cd '$path'; cl; vim" C-m

    tmux select-window -t "$name:1.1"

    sleep 1

    # cd - > /dev/null
  }
}

open-session() {
  local name="$1"
  local cmd="attach"

  if [ -n "$TMUX" ]; then
    cmd="switchc"
  fi

  tmux "$cmd" -t "$name"
}

find-project() {
  local name="$1"

  local path
  path="$(grep "^$name:" < "$PRJ_FILE" | cut -d ':' -f 2)"

  if [[ "$path" == "" ]]; then
    error "unknown project $name"
    exit 1
  fi

  echo "$path"
}

# ADD
prj-add() {
  usage() {
    cat <<-END

Manage project screens

Usage: prj add -n [name] -p [path]

Options:

  -n              Project name
  -p              Path to the project

END
  }

  local name=""
  local path=""

  while [[ $# -gt 0 ]]; do
    case "$1" in
      -h|--help|help)
        usage
        exit
        ;;

      -n)
        name="$2"
        shift
        shift
        ;;

      -p)
        path="$2"
        shift
        shift
        ;;

      *)
        error "unknown option $1"
        exit 1
    esac
  done

  if [[ -z "$name" ]]; then
    error "must specify -n option"
    exit 1
  fi

  if [[ -z "$path" ]]; then
    error "must specify -p option"
    exit 1
  fi

  add-project "$name" "$path"
}

add-project() {
  local name="$1"
  local path="$2"

  if [[ ! -d "$path" ]]; then
    mkdir -p "$path"
  fi

  echo "$name:$path" >> "$PRJ_FILE"
  echo "added $name"
}

# CD
prj-cd() {
  usage() {
    cat <<-END

Change to a project directory

Usage: prj cd [name]

END
  }

  case "$1" in
    -h|--help|help)
      usage
      exit
      ;;

    "")
      error "you must specify a project name"
      exit 1
      ;;

    *)
      cd-project "$1"
      ;;
  esac
}

cd-project() {
  local name="$1"

  local path
  path="$(find-project "$name")"

  echo "$path"
  exit
}

# EDIT
prj-edit() {
  "$EDITOR" "$PRJ_FILE"
}

# LIST
prj-ls() {
  usage() {
    cat <<-END

Lists all prj projects

Usage: prj ls

END
  }

  case "$1" in
    -h|--help|help)
      usage
      exit
      ;;

    "")
      ls-projects
      exit
      ;;

    *)
      error "unknown option $1"
      exit 1
      ;;
  esac
}

ls-projects() {
  if [[ $(wc -l "$PRJ_FILE") == "0" ]]; then
    echo "(no projects)" >&2
    exit
  fi

  column -t -s ':' "$PRJ_FILE" | sort
}

# OPEN
prj-open() {
  usage() {
    cat <<-END

Open a project

Usage: prj open [name]

END
  }

  case "$1" in
    -h|--help|help)
      usage
      exit
      ;;

    "")
      error "you must specify a project name"
      exit 1
      ;;

    *)
      open-project "$1"
      ;;
  esac
}

open-project() {
  local name="$1"

  local path
  path="$(find-project "$name")"

  if ! session-exists "$name"; then
    create-session "$name" "$path"
  fi

  open-session "$name"
  exit
}

main() {
  if [[ ! -f "$PRJ_FILE" ]]; then
    touch "$PRJ_FILE"
  fi

  usage() {
    cat <<-END

Creates tmux session and windows for a project

Usage: prj [command]

  add             Add a new project
  cd              Change to a project directory
  edit            Edit the .prj config file
  help            This help text
  ls              List all projects
  open            Open a project

END
  }

  if [[ $# -eq 0 ]]; then
    error "specify a command"
    exit 1
  fi

  while [[ $# -gt 0 ]]; do
    local arg="$1"

    case "$arg" in
      -h|--help|help)
        usage
        exit
        ;;

      add|cd|edit|ls|open)
        shift

        "prj-$arg" "$@"
        exit
        ;;

      *)
        error "unknown option $arg"
        exit 1
        ;;
    esac
    shift
  done
}

main "$@"
