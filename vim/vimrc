set nocompatible
autocmd!


"""
" Plugins
"
if filereadable(glob('~/.vim/vimrc.plugins'))
  source ~/.vim/vimrc.plugins
endif

" Fzf
" let g:fzf_layout = { 'window': 'enew' }


" Airline
let g:airline_powerline_fonts = 1
let g:airline_mode_map = {
    \ '__' : '-',
    \ 'n'  : 'N',
    \ 'i'  : 'I',
    \ 'R'  : 'R',
    \ 'c'  : 'C',
    \ 'v'  : 'V',
    \ 'V'  : 'V',
    \ '' : 'V',
    \ 's'  : 'S',
    \ 'S'  : 'S',
    \ '' : 'S',
    \ }

" Only show branch in section b
"let g:airline_section_b = airline#section#create(['branch'])
let g:airline#extensions#hunks#enabled = 0
let g:airline#extensions#ale#enabled = 1

" Show path relative to cwd
let g:airline_section_c = '%f%m'

" Remove unnecessary symbols
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline_symbols.linenr = ''
let g:airline_symbols.maxlinenr = ''

" Only show file encoding if it's not UTF-8
let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'


" ALE
let g:ale_sign_error = '✗'
let g:ale_sign_warning = '⚠'
let g:ale_lint_delay = 2000 " 2 seconds
let g:ale_sh_shellcheck_options = '-x'
let g:ale_open_list = 1


" YouCompleteMe
" Python completions are generating errors, so just turn it off
let g:ycm_filetype_blacklist = { 'python' : 1 }

" Disable the preview window that appears on autocomplete
set completeopt-=preview


" GitGutter
let g:gitgutter_realtime = 0
let g:gitgutter_eager    = 0

" vim-go
let g:go_template_autocreate = 0
let g:go_echo_go_info = 0

" vim-json
" Disable double quotes conceal
let g:vim_json_syntax_conceal = 0

" Fix broken vim-json syntax highlighting
hi! def link jsonKeyword Identifier

" Sonic Pi
let g:sonicpi_command = 'sonic-pi-tool'
let g:sonicpi_keymaps_enabled = 0

" vim-align
let g:easy_align_delimiters = {
\  '>': { 'pattern': '->', 'left_margin': 1, 'right_margin': 1, 'stick_to_left': 0 },
\  '<': { 'pattern': '<-', 'left_margin': 1, 'right_margin': 1, 'stick_to_left': 0 }
\ }


"""
" Settings
"
filetype plugin indent on
syntax on

runtime macros/matchit.vim

colorscheme Tomorrow-Night-Eighties

highlight CursorLineNR ctermfg=cyan

set autoindent
set backspace=indent,eol,start
set backupdir=~/.vim/tmp/backup
set cursorline
set dir=~/.vim/tmp/swap/
set encoding=utf-8
set expandtab
set exrc
set hidden
set history=1000
set hlsearch
set incsearch
set iskeyword+=-
set laststatus=2
set listchars=tab:▸\ ,eol:¬
set number
set scrolloff=3
set shell=/bin/bash
set shiftwidth=2
set showcmd
set showmode
set smarttab
set softtabstop=2
set tabstop=2
set undodir=~/.vim/tmp/backup
set undofile
set visualbell
set wildignore=*.DS_Store,*.dSYM,*.log,*.o,*.ss~
set wildmode=list:longest


"""
" Mappings
"
let mapleader = " "

nnoremap <leader>i :set list!<CR>
nnoremap <leader>t :NERDTreeToggle<CR>
nnoremap <leader>g :e %:.:h/
nnoremap <leader>c :saveas %:p:h/

" Fzf
nnoremap <leader>f :Files<CR>
nnoremap <leader>F :Files %:p:h<CR>
nnoremap <leader>b :Buffers<CR>

" Faster scrolling
nnoremap <C-e> 4<C-e>
nnoremap <C-y> 4<C-y>

" Faster search and replace
noremap <leader>s :%s//g<LEFT><LEFT>

" Center search results
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz

" Scroll through command history
cnoremap <c-n> <down>
cnoremap <c-p> <up>

" EasyAlign
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

" Clear search results
nnoremap <c-l> :noh<CR>

" Convert the current visual selection into a BigDecimal
" e.g. 1.5 to BigDecimal('1.5')
vnoremap <leader>d <ESC>`>a')<ESC>`<iBigDecimal('<ESC>

" IQT
nnoremap <leader>m o"va-vsrv-github.a.internal/it/malinois/"<LEFT>

" Go
nnoremap <leader>r :GoRun %<CR>

" Sonic Pi
nnoremap <leader>R :SonicPiSendBuffer<CR>
nnoremap <leader>S :SonicPiStop<CR>

" Shaden
vnoremap <C-S-P> :<C-U>ShadenPatchSelection<CR>
nnoremap <C-S-P> :<C-U>ShadenPatchLine<CR>


"""
" Commands
"
command! StripWhitespace %s/\s\+$//e | noh


"""
" Auto Commands
"
augroup filetypes
  autocmd BufRead,BufNewFile {*.markdown,*.md} set filetype=markdown
  autocmd BufRead,BufNewFile {Gemfile,Vagrantfile,*.arb} set filetype=ruby

  autocmd FileType objc,c setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab
  autocmd FileType go setlocal tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
  autocmd FileType markdown setlocal linebreak
  autocmd FileType c,cpp setlocal commentstring=//\ %s
  autocmd FileType terraform setlocal commentstring=#\ %s
augroup END


"""""
" GUI prefs
"
if has("gui_running")
  set guifont=Monaco\ for\ Powerline:h13

  " Remove toolbar
  set go-=T

  " Remove scrollbar
  set go-=r

  " Transparent BG
  set bg=dark
  if &background == "dark"
    set transp=3
  end

  " Set width to 120 and fill height
  set lines=999 columns=120
  "set fuoptions=maxvert

  if has("ballooneval")
    set noballooneval " disable hover tooltips
  endif
else
  set ttimeoutlen=100
endif

"highlight clear SignColumn


"""
" Other config files
"
if filereadable(glob('~/.vim/vimrc.rails'))
  source ~/.vim/vimrc.rails
endif

silent execute '!mkdir -p $HOME/.vim/tmp/backup'
silent execute '!mkdir -p $HOME/.vim/tmp/swap'
silent execute '!mkdir -p $HOME/.vim/tmp/undo'
